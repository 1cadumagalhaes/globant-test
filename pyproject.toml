[project]
name = "globant"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.115.4",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.6.1",
    "sqlmodel>=0.0.22",
    "uvicorn>=0.32.0",
    "python-multipart>=0.0.17",
]

[tool.uv]
dev-dependencies = [
    "alembic>=1.14.0",
    "httpx>=0.27.2",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.7.2",
    "testcontainers>=4.8.2",
    "taskipy>=1.14.0",
]


[tool.ruff]
line-length = 79
extend-exclude = ['migrations']
exclude = [".venv"]

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'C', 'B', 'ASYNC',  "BLE", "S"]
ignore = ['PLR0913', 'PLR0917', 'BLE001']
exclude = ["tests/*"]

[tool.ruff.format]
preview = true
quote-style = 'single'
docstring-code-format = true


[tool.pytest]
asyncio_mode = 'auto'

[tool.pytest.ini_options]
pythonpath = '.'
addopts = '-p no:warnings -s --no-header'
asyncio_mode = 'auto'
asyncio_default_fixture_loop_scope = "module"



[tool.taskipy.tasks]
lint = 'ruff check .; ruff check . --diff --fix'
format = 'ruff check . --fix; ruff format .'
run = 'fastapi run app/main.py'
pre_test = 'task lint'
tests = 'pytest -s -x -vv'
check = "task lint && task format && task tests"
clean = "find . -type d -name '__pycache__'  -exec rm -rf {} + && rm -rf .pytest_cache .coverage htmlcov"
init = "mkdir .postgres-data"
dev = "fastapi dev app/main.py"

docker-up = "docker compose up --build -d"
docker-dev = "docker compose up --build --watch"
docker-down = "docker compose down"
docker-logs = "docker compose logs -f"
